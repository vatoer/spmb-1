generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
  output        = "../../node_modules/@prisma-db-spmb/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL_SPMB")
}

model Pendaftaran {
  id        String    @id @default(cuid())
  userId    String    @map("user_id") @db.VarChar
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt DateTime? @default(now()) @map("updated_at") @db.Timestamp(6)
  status    String?   @db.VarChar

  calonMuridId String?     @map("calon_murid_id") @db.VarChar
  calonMurid   CalonMurid? @relation(fields: [calonMuridId], references: [id])

  // keterangan sekolah asal diisi jika sekolah asal tidak mempunyai NPSN 
  tahunMasukSekolahAsal Int?    @map("tahun_masuk_sekolah_asal")
  tahunLulusSekolahAsal Int?    @map("tahun_lulus_sekolah_asal")
  npsnSekolahAsal       String? @map("npsn_sekolah_asal") @db.VarChar
  namaSekolahAsal       String? @map("nama_sekolah_asal") @db.VarChar
  alamatSekolahAsal     String? @map("alamat_sekolah_asal") @db.VarChar

  npsnSekolahTujuan String?  @map("npsn_sekolah_tujuan") @db.VarChar
  sekolahTujuan     Sekolah? @relation(fields: [npsnSekolahTujuan], references: [npsn])

  @@map("pendaftaran")
}

model CalonMurid {
  id                        String        @id @default(cuid())
  nama                      String        @db.VarChar
  kewarganegaraan           String        @db.VarChar
  keteranganKewarganegaraan String?       @map("keterangan_kewarganegaraan") @db.VarChar
  nisn                      String?       @db.VarChar
  kk                        String?       @db.VarChar
  nik                       String?       @db.VarChar
  paspor                    String?       @db.VarChar
  tempatLahir               String?       @map("tempat_lahir") @db.VarChar
  tanggalLahir              DateTime      @map("tanggal_lahir") @db.Date
  jenisKelamin              String        @map("jenis_kelamin") @db.VarChar
  agama                     String        @db.VarChar
  golonganDarah             String?       @map("golongan_darah") @db.VarChar
  jenjangDikdasmen          String        @map("jenjang_dikdasmen") @db.VarChar
  mapCoordinates            String?       @map("map_coordinates") @db.VarChar
  statusDomisili            String        @map("status_domisili") @db.VarChar
  wilayahAdministratifId    String        @map("wilayah_administratif_id") @db.VarChar // tingkat desa/kelurahan
  alamat                    String        @db.VarChar
  rt                        String?       @db.VarChar
  rw                        String?       @db.VarChar
  ibuId                     String?       @map("ibu_id") @db.VarChar
  ibu                       OrangTua?     @relation("IbuRelation", fields: [ibuId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  ayahId                    String?       @map("ayah_id") @db.VarChar
  ayah                      OrangTua?     @relation("AyahRelation", fields: [ayahId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  createdAt                 DateTime?     @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt                 DateTime?     @default(now()) @map("updated_at") @db.Timestamp(6)
  pendaftaran               Pendaftaran[]
  userId                    String        @map("user_id") @db.VarChar
  Nilai                     Nilai[]

  @@map("calon_murid")
}

model Sekolah {
  id               String        @id @default(cuid())
  nama             String        @db.VarChar
  npsn             String?       @db.VarChar(10)
  status           String?       @db.VarChar
  bentukPendidikan String?       @map("bentuk_pendidikan")
  alamat           String        @db.VarChar
  mapCoordinates   String?       @map("map_coordinates") @db.VarChar
  kodePos          String?       @map("kode_pos") @db.VarChar
  dapoWilayahId    String?       @map("dapo_wilayah_id") @db.VarChar // ini adalah kode wilayah dari dapo_wilayah untuk kecamatan
  kelurahanDesa    String?       @map("kelurahan_desa") @db.VarChar
  telp             String?       @db.VarChar
  email            String?       @db.VarChar
  website          String?       @db.VarChar
  akreditasi       String?       @db.VarChar
  kurikulum        String?       @db.VarChar
  visi             String?       @db.VarChar
  misi             String?       @db.VarChar
  fasilitas        String[]      @db.VarChar
  logo             String?       @db.VarChar
  berandaHtml      String?       @map("beranda_html")
  berandaBanner    String?       @map("beranda_banner") @db.VarChar
  berandaPlaintext String?       @map("beranda_plaintext")
  createdAt        DateTime?     @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt        DateTime?     @default(now()) @map("updated_at") @db.Timestamp(6)
  Pendaftaran      Pendaftaran[]

  wilayah DapoWilayah? @relation(fields: [dapoWilayahId], references: [kodeWilayah])

  @@unique(npsn)
  @@map("sekolah")
}

model WilayahAdministratif {
  id         String                 @id
  nama       String                 @db.VarChar
  indukId    String?                @map("induk_id") @db.VarChar
  tingkat    Int                    @default(1)
  induk      WilayahAdministratif?  @relation("IndukRelation", fields: [indukId], references: [id])
  subWilayah WilayahAdministratif[] @relation("IndukRelation")

  @@map("wilayah_administratif")
}

model DapoWilayah {
  kodeWilayah               String    @id @map("kode_wilayah") @db.VarChar
  nama                      String    @db.VarChar
  idLevelWilayah            String    @map("id_level_wilayah") @db.VarChar
  mstKodeWilayah            String    @map("mst_kode_wilayah") @db.VarChar
  indukProvinsi             String    @map("induk_provinsi") @db.VarChar
  kodeWilayahIndukProvinsi  String    @map("kode_wilayah_induk_provinsi") @db.VarChar
  indukKabupaten            String    @map("induk_kabupaten") @db.VarChar
  kodeWilayahIndukKabupaten String    @map("kode_wilayah_induk_kabupaten") @db.VarChar
  Sekolah                   Sekolah[]

  @@map("dapo_wilayah")
}

model Pekerjaan {
  id           String      @id
  nama         String      @db.VarChar
  indukId      String?     @map("induk_id") @db.VarChar
  induk        Pekerjaan?  @relation("IndukRelation", fields: [indukId], references: [id])
  subPekerjaan Pekerjaan[] @relation("IndukRelation")
  OrangTua     OrangTua[]

  @@map("pekerjaan")
}

model RentangPendapatan {
  id           String     @id
  nama         String     @db.VarChar
  rentangBawah Int        @map("rentang_bawah")
  rentangAtas  Int        @map("rentang_atas")
  createdAt    DateTime   @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt    DateTime?  @default(now()) @map("updated_at") @db.Timestamp(6)
  OrangTua     OrangTua[]

  @@map("rentang_pendapatan")
}

model OrangTua {
  id                String             @id @default(cuid())
  nama              String             @db.VarChar
  nik               String?            @db.VarChar
  kk                String?            @db.VarChar
  jenisKelamin      String             @map("jenis_kelamin") @db.VarChar
  tahunWafat        Int?               @map("tahun_wafat")
  jenjangPendidikan String             @map("jenjang_pendidikan") @db.VarChar
  pekerjaanId       String?            @map("pekerjaan_id") @db.VarChar
  pekerjaan         Pekerjaan?         @relation(fields: [pekerjaanId], references: [id])
  pendapatanId      String?            @map("pendapatan_id") @db.VarChar
  pendapatan        RentangPendapatan? @relation(fields: [pendapatanId], references: [id])
  anakIbu           CalonMurid[]       @relation("IbuRelation")
  anakAyah          CalonMurid[]       @relation("AyahRelation")
  userId            String             @map("user_id") @db.VarChar

  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt DateTime? @default(now()) @map("updated_at") @db.Timestamp(6)

  @@map("orang_tua")
}

model MataPelajaran {
  id   String @id @default(cuid())
  nama String @db.VarChar
  kode String @db.VarChar

  jenjangDikdasmen String @map("jenjang_dikdasmen") @db.VarChar
  urutan           Int    @default(0) @map("urutan")

  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt DateTime? @default(now()) @map("updated_at") @db.Timestamp(6)
  Nilai     Nilai[]

  @@map("mata_pelajaran")
}

model Nilai {
  id              String @id @default(cuid())
  mataPelajaranId String @map("mata_pelajaran_id") @db.VarChar
  calonMuridId    String @map("calon_murid_id") @db.VarChar
  nilai           Int    @default(0)
  semester        Int    @default(0)

  createdBy String?   @map("created_by") @db.VarChar // user id
  updatedBy String?   @map("updated_by") @db.VarChar
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt DateTime? @default(now()) @map("updated_at") @db.Timestamp(6)

  calonMurid    CalonMurid    @relation(fields: [calonMuridId], references: [id])
  mataPelajaran MataPelajaran @relation(fields: [mataPelajaranId], references: [id])

  @@map("nilai")
}
